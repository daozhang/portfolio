version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: designer-portfolio-backend-prod
    environment:
      NODE_ENV: production
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      JWT_SECRET: ${JWT_SECRET}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY_ID: ${FIREBASE_PRIVATE_KEY_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_CLIENT_ID: ${FIREBASE_CLIENT_ID}
      FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
      CORS_ORIGIN: ${CORS_ORIGIN}
      PORT: ${PORT:-3001}
    ports:
      - "${PORT:-3001}:${PORT:-3001}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-3001}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - designer-portfolio-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    container_name: designer-portfolio-frontend-prod
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - designer-portfolio-network

networks:
  designer-portfolio-network:
    driver: bridge